# Environment Variables Configuration
# Copy this file to .env and fill in your actual values

# API Keys (Required)
JINA_API_KEY=your_jina_api_key_here
GEMINI_API_KEY=your_google_gemini_api_key_here

# Server Configuration
PORT=5000
NODE_ENV=development

# Database URLs
REDIS_URL=redis://localhost:6379
QDRANT_URL=http://localhost:6333
QDRANT_API_KEY=optional_qdrant_api_key

# Cache and Session Configuration (in seconds)
CHAT_HISTORY_TTL=86400        # 24 hours - how long to keep chat history
REDIS_TTL=3600               # 1 hour - general Redis cache TTL
VECTOR_CACHE_TTL=2592000     # 30 days - how long to keep vector embeddings

# RAG Configuration
MAX_RETRIEVAL_RESULTS=5      # Number of documents to retrieve for context
EMBEDDING_DIMENSIONS=768     # Jina embeddings dimension (768 for jina-embeddings-v2-base-en)
SIMILARITY_THRESHOLD=0.7     # Minimum similarity score for retrieval
CHUNK_SIZE=1000             # Text chunk size for embedding
CHUNK_OVERLAP=200           # Overlap between text chunks

# LLM Configuration
MAX_TOKENS=2048             # Maximum tokens in LLM response
TEMPERATURE=0.7             # LLM temperature (0.0-2.0)
TOP_P=0.9                  # LLM top-p sampling
TOP_K=40                   # LLM top-k sampling

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000    # 15 minutes in milliseconds
RATE_LIMIT_MAX_REQUESTS=100    # Max requests per window per IP

# News Ingestion Configuration
MAX_ARTICLES=50                # Maximum number of articles to ingest
NEWS_SOURCES=reuters,bbc,cnn   # Comma-separated list of news sources
REQUEST_TIMEOUT=30000          # HTTP request timeout in milliseconds
REQUEST_RETRIES=3              # Number of retry attempts for failed requests

# Logging Configuration
LOG_LEVEL=info                 # Logging level: error, warn, info, debug
LOG_FILE=logs/app.log         # Log file path

# Security Configuration
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000  # Comma-separated allowed origins

# Performance Configuration
MAX_CONCURRENT_REQUESTS=10     # Maximum concurrent API requests
REQUEST_QUEUE_SIZE=100        # Request queue size for rate limiting

# Feature Flags
ENABLE_STREAMING=true         # Enable streaming responses
ENABLE_CACHING=true          # Enable response caching
ENABLE_METRICS=false         # Enable performance metrics collection
ENABLE_DEBUG_LOGS=false      # Enable debug logging

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30000   # Health check interval in milliseconds

# Optional: SQL Database (if implementing persistence)
# DATABASE_URL=postgresql://user:password@localhost:5432/rag_chatbot

# Optional: Monitoring and Analytics
# SENTRY_DSN=your_sentry_dsn_for_error_tracking
# ANALYTICS_KEY=your_analytics_key

# Optional: External Services
# REDIS_CLUSTER_NODES=redis1:6379,redis2:6379  # For Redis cluster
# ELASTICSEARCH_URL=http://localhost:9200       # Alternative vector store